---
- name: Deploy Spring PetClinic
  hosts: production
  become: yes
  vars:
    app_name: spring-petclinic
    app_repo: https://github.com/spring-projects/spring-petclinic.git
    host_port: 80
    
  tasks:
    - name: Check if container already exists
      shell: docker ps -a | grep spring-petclinic || echo "not found"
      register: container_exists
      changed_when: false
      ignore_errors: yes
    
    - name: Stop existing Spring PetClinic container
      shell: docker stop spring-petclinic && docker rm spring-petclinic
      when: "'not found' not in container_exists.stdout"
      ignore_errors: yes
    
    - name: Pull Docker image
      shell: docker pull eclipse-temurin:17-jdk-focal
      ignore_errors: yes
    
    - name: Create app directory if not exists
      file:
        path: "/opt/{{ app_name }}"
        state: directory
        mode: '0755'
    
    - name: Check if jar file exists
      stat:
        path: "/opt/{{ app_name }}/target/spring-petclinic-*.jar"
      register: jar_exists
    
    - name: Create simple Spring Boot application
      copy:
        dest: "/opt/{{ app_name }}/demo.jar"
        src: "https://start.spring.io/starter.zip?type=maven-project&language=java&bootVersion=3.2.4&baseDir=demo&groupId=com.example&artifactId=demo&name=demo&description=Demo%20project%20for%20Spring%20Boot&packageName=com.example.demo&packaging=jar&javaVersion=17&dependencies=web"
        mode: '0644'
        remote_src: yes
      when: not jar_exists.stat.exists
      ignore_errors: yes
    
    - name: Start Spring PetClinic container
      shell: >
        docker run -d --name spring-petclinic -p {{ host_port }}:8080 
        -v /opt/{{ app_name }}/demo.jar:/app.jar 
        eclipse-temurin:17-jdk-focal 
        java -jar /app.jar
      args:
        chdir: "/opt/{{ app_name }}"